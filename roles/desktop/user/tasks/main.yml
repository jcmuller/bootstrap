# vim: set foldmethod=marker:
---
# Clone custom-oh-my-zsh {{{
- name: Ensure MyStuff directory exists
  tags: [zsh]
  file:
    path: ~/Development/MyStuff
    state: directory
- name: Clone custom-oh-my-zsh
  tags: [zsh]
  git:
    repo: git@github.com:jcmuller/custom-oh-my-zsh.git
    dest: ~/Development/MyStuff/custom-oh-my-zsh
    accept_hostkey: true
    update: true
# }}}
# Install yadm {{{
- name: Clone yadm
  tags: [yadm]
  git:
    repo: https://github.com/TheLocehiliosan/yadm.git
    dest: ~/.yadm-src
- name: Ensure bin exists
  tags: [yadm, gopass]
  file:
    dest: ~/bin
    mode: 0755
    state: directory
- name: Install yadm
  tags: [yadm]
  file:
    src: ~/.yadm-src/yadm
    dest: ~/bin/yadm
    state: link
    mode: 0755
- name: Yadm get config
  command: ~/bin/yadm clone git@github.com:jcmuller/dotrcs.git
# }}}
# {{{ Install gopasspwd
- name: Copy gopasspwd
  tags: [gopass]
  copy:
    src: gopasspwd
    dest: ~/bin
    mode: 0755
# }}}
# {{{ Install antigen
- name: Antigen
  tags: [antigen, zsh]
  git:
    repo: https://github.com/zsh-users/antigen
    dest: ~/.antigen-src
# }}}
- name: Install asdf #{{{
  tags: [asdf]
  git:
    repo: https://github.com/asdf-vm/asdf.git
    dest: ~/.asdf
    version: "{{asdf.version}}"

- name: Install asdf plugins
  tags: [asdf, asdf-plugins]
  shell: |
    . ~/.asdf/asdf.sh
    asdf plugin add {{item.name}}
  args:
    executable: /bin/bash
    creates: "~/.asdf/plugins/{{item.name}}"
  with_items: "{{asdf.plugins}}"

- name: Install versions
  tags: [asdf, asdf-plugins]
  shell: |
    . ~/.asdf/asdf.sh
    asdf install {{item.name}} {{item.version}}
    asdf global {{item.name}} {{item.version}}
    asdf reshim
  args:
    executable: /bin/bash
    creates: "~/.asdf/installs/{{item.name}}/{{item.version}}"
  with_items: "{{asdf.plugins}}"
#}}}
- name: Install goobook # {{{
  tags: [mutt, goobook]
  pip:
    name: goobook
    executable: /home/jcmuller/.asdf/shims/pip
# }}}
# Helm plugins {{{
- name: Install helm plugins
  tags: [helm-plugins]
  shell: helm plugin install {{ item.source }} --version {{ item.version }}
  with_items: "{{ helm.plugins }}"
# }}}
- name: Ensure zsh is installed # {{{
  become: true
  tags: [zsh]
  apt:
    name: zsh
# }}}
- name: Set shell to zsh # {{{
  tags: [zsh]
  become: true
  user:
    name: "{{ user.name }}"
    append: true
    shell: /usr/bin/zsh
# }}}
- name: Install logrotate config for xsession-errors # {{{
  tags: [xsession]
  become: true
  copy:
    src: xsession-errors
    dest: /etc/logrotate.d/
    mode: 0644
# }}}
- name: Install version_manager_shell_string # {{{
  tags: [version_manager_shell_string]
  become: true
  become_user: root
  get_url:
    url: https://github.com/jcmuller/version_manager_shell_string/releases/download/{{ version_manager_shell_string.version }}/version_manager_shell_string-linux
    dest: /usr/local/bin/version_manager_shell_string
    mode: 0755
    force: true
# }}}
# Install gopass {{{
- name: Set gopass url
  tags: [gopass]
  set_fact:
    gopass_url: https://github.com/gopasspw/gopass/releases/download/v{{ gopass.version }}/gopass-{{ gopass.version }}-linux-amd64.tar.gz

- name: Create gopass install dir
  tags: [gopass]
  file: path=/tmp/gopass state=directory

- name: Download gopass
  tags: [gopass]
  get_url:
    url: "{{ gopass_url }}"
    dest: /tmp/gopass

- name: Unpack gopass
  tags: [gopass]
  shell: |
    tar --strip-components=1 -zxpf *.tar.gz
  args:
    chdir: /tmp/gopass

- name: Install gopass
  tags: [gopass]
  become: true
  copy:
    src: /tmp/gopass/gopass
    remote_src: true
    dest: /usr/local/bin/gopass
    owner: root
    group: root
    mode: 0755

- name: Install gopass completion
  tags: [gopass]
  become: true
  copy:
    src: /tmp/gopass/zsh.completion
    remote_src: true
    dest: /usr/local/share/zsh/site-functions/_gopass
    owner: root
    group: root

- name: Remove gopass installation files
  tags: [gopass]
  file:
    path: /tmp/gopass
    state: absent
# }}}
- name: Install summon # {{{
  tags: summon
  become: true
  unarchive:
    src: https://github.com/cyberark/summon/releases/download/{{ summon.version }}/summon-linux-amd64.tar.gz
    dest: /usr/local/bin
    remote_src: true

- name: Ensure summon lib directory exists
  tags: summon
  become: true
  file:
    dest: /usr/local/lib/summon
    state: directory
    mode: 0755

- name: Add gopass for summon
  tags: [summon, gopasspwd]
  become: true
  copy:
    src: gopasspwd
    dest: /usr/local/lib/summon/gopass
    mode: 0755
# }}}
- name: Install user systemctl units # {{{
  tags: systemctl
  file:
    dest: ~/.config/systemd/user/
    state: directory
    mode: 0755

- name: Install user systemctl
  tags: systemctl
  copy:
    src: "{{item}}"
    dest: ~/.config/systemd/user/
    owner: '{{user.name}}'
    group: '{{user.group}}'
    mode: 0644
  with_items:
    - systemd/dunst.service
    - systemd/offlineimap@.service

- name: Install
  tags: systemctl
  shell: |
    systemctl --user enable offlineimap@Personal.service
    systemctl --user enable dunst.service
# }}}
# {{{ Install browserpass-native
- name: Set browserpass-native url
  tags: [browserpass-native]
  set_fact:
    browserpass_native_url: https://github.com/browserpass/browserpass-native/releases/download/{{ browserpassnative.version }}/browserpass-linux64-{{ browserpassnative.version }}.tar.gz

- name: Create browserpass-native install dir
  tags: [browserpass-native]
  file: path=/tmp/browserpass-native state=directory

- name: Download browserpass-native
  tags: [browserpass-native]
  get_url:
    url: "{{ browserpass_native_url }}"
    dest: /tmp/browserpass-native

- name: Unpack browserpass-native
  tags: [browserpass-native]
  shell: |
    tar --strip-components=1 -zxpf *.tar.gz
  args:
    chdir: /tmp/browserpass-native

- name: Install browserpass-native
  tags: [browserpass-native]
  become: true
  copy:
    src: /tmp/browserpass-native/browserpass-linux64
    remote_src: true
    dest: /usr/local/bin/browserpass-native
    owner: root
    group: root
    mode: 0755

- name: Install browserpass-native
  tags: [browserpass-native]
  become: true
  make:
    target: "{{ item }}"
    chdir: "/tmp/browserpass-native"
  with_items:
    - install
    - hosts-firefox

- name: Remove browserpass-native installation files
  tags: [browserpass-native]
  file:
    path: /tmp/browserpass-native
    state: absent
# }}}
