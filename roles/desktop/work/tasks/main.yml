# vim: set foldmethod=marker nospell:
---
- name: Install kubectl
  tags: [kubectl, k8s]
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/{{ kubectl.version }}/bin/linux/amd64/kubectl
    dest: /usr/local/bin
    owner: root
    group: root
    mode: 0755

- name: Install minikube
  tags: [minikube, k8s]
  get_url:
    url: https://github.com/kubernetes/minikube/releases/download/{{ minikube.version }}/minikube-linux-amd64
    dest: /usr/local/bin/minikube
    owner: root
    group: root
    mode: 0755

# Helm {{{
- name: Set helm url
  tags: [k8s, helm]
  set_fact:
    helm_url: "https://storage.googleapis.com/kubernetes-helm/helm-{{ helm.version }}-linux-amd64.tar.gz"

- name: Create helm install dir
  tags: [k8s, helm]
  file: path=/tmp/helm state=directory

- name: Download helm
  tags: [k8s, helm]
  get_url:
    url: "{{ helm_url }}"
    dest: /tmp/helm

- name: Unpack helm
  tags: [k8s, helm]
  shell: |
    tar --strip-components=1 -zxpf *.tar.gz
  args:
    chdir: /tmp/helm

- name: Install helm
  tags: [k8s, helm]
  copy:
    src: /tmp/helm/helm
    remote_src: yes
    dest: /usr/local/bin/helm
    owner: root
    group: root
    mode: 0755

- name: Remove helm installation files
  tags: [k8s, helm]
  file:
    path: /tmp/helm
    state: absent
# }}}

- name: Install stern
  tags: [stern, k8s]
  get_url:
    url: https://github.com/wercker/stern/releases/download/{{ stern.version }}/stern_linux_amd64
    dest: /usr/local/bin/stern
    owner: root
    group: root
    mode: 0755

- name: Install argo
  tags: argo
  get_url:
    url: "https://github.com/argoproj/argo/releases/download/{{ argo.version }}/argo-linux-amd64"
    dest: /usr/local/bin/argo
    owner: root
    group: root
    mode: 0755

- name: Install aws-vault
  tags: [aws]
  get_url:
    url: "https://github.com/99designs/aws-vault/releases/download/v{{ aws_vault.version }}/aws-vault-linux-amd64"
    dest: /usr/local/bin/aws-vault
    owner: root
    group: root
    mode: 0755

- name: Install vagrant
  tags: [vagrant]
  apt:
    deb: https://releases.hashicorp.com/vagrant/{{ vagrant.version }}/vagrant_{{ vagrant.version }}_x86_64.deb

- name: Install pack
  tags: pack
  unarchive:
    src: https://github.com/buildpack/pack/releases/download/{{ pack.version }}/pack-{{ pack.version }}-linux.tgz
    dest: /usr/local/bin
    remote_src: yes

- name: Install bats
  tags: bats
  get_url:
    url: "https://raw.githubusercontent.com/bats-core/bats-core/{{ bats.version }}/bin/bats"
    dest: /usr/local/bin/
    owner: root
    group: root
    mode: 0755

- name: Install terraform cli
  tags: [terraform]
  unarchive:
    src: "https://releases.hashicorp.com/terraform/{{terraform.version}}/terraform_{{terraform.version}}_linux_amd64.zip"
    dest: /usr/local/bin
    remote_src: yes
    owner: root
    group: root
    mode: 0755

- name: Symlink terraform
  tags: [terraform]
  file:
    src: /usr/local/bin/terraform
    dest: /usr/local/bin/tf
    owner: root
    group: root
    state: link

- name: Install 1password cli
  tags: [1password]
  unarchive:
    src: https://cache.agilebits.com/dist/1P/op/pkg/{{op.version}}/op_linux_amd64_{{op.version}}.zip
    dest: /usr/local/bin
    remote_src: yes
    owner: root
    group: root
    mode: 0755

- name: Install jq
  tags: jq
  get_url:
    url: https://github.com/stedolan/jq/releases/download/jq-{{jq.version}}/jq-linux64
    dest: /usr/local/bin
    owner: root
    group: root
    mode: 0755

- name: Link jq
  tags: jq
  file:
    src: /usr/local/bin/jq-linux64
    dest: /usr/local/bin/jq
    state: link
