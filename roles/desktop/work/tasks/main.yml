# vim: set foldmethod=marker nospell:
---
- name: Install Greenhouse root CA
  tags: [ca]
  get_url:
    url: https://s3.amazonaws.com/grnhse-vpc-assets/certs/greenhouse-root-ca.pem
    dest: /usr/local/share/ca-certificates/greenhouse-root-ca.crt
    owner: root
    group: root
    mode: 0644
    force: true

- name: Update CA Certificates
  tags: [ca]
  command: update-ca-certificates

- name: Install kubectl
  tags: [kubectl, k8s]
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/{{ kubectl.version }}/bin/linux/amd64/kubectl
    dest: /usr/local/bin
    owner: root
    group: root
    mode: 0755
    force: true

- name: Install minikube
  tags: [minikube, k8s]
  get_url:
    url: https://github.com/kubernetes/minikube/releases/download/{{ minikube.version }}/minikube-linux-amd64
    dest: /usr/local/bin/minikube
    owner: root
    group: root
    mode: 0755
    force: true

# Helm {{{
- name: Set helm url
  tags: [k8s, helm]
  set_fact:
    helm_url: "https://get.helm.sh/helm-{{ helm.version }}-linux-amd64.tar.gz"

- name: Create helm install dir
  tags: [k8s, helm]
  file: path=/tmp/helm state=directory

- name: Download helm
  tags: [k8s, helm]
  get_url:
    url: "{{ helm_url }}"
    dest: /tmp/helm

- name: Unpack helm
  tags: [k8s, helm]
  shell: |
    tar --strip-components=1 -zxpf *.tar.gz
  args:
    chdir: /tmp/helm

- name: Install helm
  tags: [k8s, helm]
  copy:
    src: /tmp/helm/helm
    remote_src: true
    dest: /usr/local/bin/helm
    owner: root
    group: root
    mode: 0755

- name: Remove helm installation files
  tags: [k8s, helm]
  file:
    path: /tmp/helm
    state: absent
# }}}

- name: Install stern
  tags: [stern, k8s]
  get_url:
    url: https://github.com/wercker/stern/releases/download/{{ stern.version }}/stern_linux_amd64
    dest: /usr/local/bin/stern
    owner: root
    group: root
    mode: 0755
    force: true

- name: Install aws-vault
  tags: [aws]
  get_url:
    url: "https://github.com/99designs/aws-vault/releases/download/v{{ aws_vault.version }}/aws-vault-linux-amd64"
    dest: /usr/local/bin/aws-vault
    owner: root
    group: root
    mode: 0755
    force: true

- name: Install vagrant
  tags: [vagrant]
  apt:
    deb: https://releases.hashicorp.com/vagrant/{{ vagrant.version }}/vagrant_{{ vagrant.version }}_x86_64.deb

- name: Install pack
  tags: pack
  unarchive:
    src: https://github.com/buildpack/pack/releases/download/{{ pack.version }}/pack-{{ pack.version }}-linux.tgz
    dest: /usr/local/bin
    remote_src: true

- name: Install terraform cli
  tags: [terraform]
  unarchive:
    src: "https://releases.hashicorp.com/terraform/{{ terraform.version }}/terraform_{{ terraform.version }}_linux_amd64.zip"
    dest: /usr/local/bin
    remote_src: true
    owner: root
    group: root
    mode: 0755

- name: Symlink terraform
  tags: [terraform]
  file:
    src: /usr/local/bin/terraform
    dest: /usr/local/bin/tf
    owner: root
    group: root
    state: link

- name: Install 1password cli
  tags: [1password]
  unarchive:
    src: https://cache.agilebits.com/dist/1P/op/pkg/{{ op.version }}/op_linux_amd64_{{ op.version }}.zip
    dest: /usr/local/bin
    remote_src: true
    owner: root
    group: root
    mode: 0755

- name: Install jq
  tags: jq
  get_url:
    url: https://github.com/stedolan/jq/releases/download/jq-{{ jq.version }}/jq-linux64
    dest: /usr/local/bin/jq
    owner: root
    group: root
    mode: 0755
    force: true

- name: Install yq
  tags: yq
  get_url:
    url: https://github.com/mikefarah/yq/releases/download/{{ yq.version }}/yq_linux_amd64
    dest: /usr/local/bin/yq
    owner: root
    group: root
    mode: 0755
    force: true

# {{{ Install teleport
- name: Create teleport install dir
  tags: [k8s, teleport]
  file: path=/tmp/teleport state=directory

- name: Install teleport
  tags: [k8s, teleport]
  unarchive:
    src: https://get.gravitational.com/teleport-{{ teleport.version }}-linux-amd64-bin.tar.gz
    dest: /tmp/
    remote_src: true
    owner: root
    group: root
    mode: 0755

- name: Install teleport
  tags: [k8s, teleport]
  copy:
    src: /tmp/teleport/tsh
    dest: /usr/local/bin/tsh
    owner: root
    group: root
    mode: 0755

- name: Remove teleport installation files
  tags: [k8s, teleport]
  file:
    path: /tmp/teleport
    state: absent
# }}}

# jsonnet {{{
- name: Install jsonnet
  tags: [jsonnet]
  unarchive:
    src: https://github.com/google/jsonnet/releases/download/{{ jsonnet.version }}/jsonnet-bin-{{ jsonnet.version }}-linux.tar.gz
    dest: /usr/local/bin
    remote_src: true
    owner: root
    group: root
    mode: 0755
# }}}

# Install duoconnect {{{
- name: Create install dir
  tags: [duoconnect]
  file: path=/tmp/duoconnect state=directory

- name: Install duoconnect
  tags: [duoconnect]
  unarchive:
    src: https://dl.duosecurity.com/DuoConnect-latest.tar.gz
    dest: /tmp/duoconnect/
    remote_src: true
    owner: root
    group: root

- name: Install duoconnect
  tags: [duoconnect]
  copy:
    src: /tmp/duoconnect/duoconnect
    dest: /usr/local/bin/
    owner: root
    group: root
    mode: 0755

- name: Remove duoconnect installation files
  tags: [duoconnect]
  file:
    path: /tmp/duoconnect
    state: absent
# }}}

# Install plantuml {{{
- name: Ensure directory exists
  tags: [plantuml]
  file: path=/usr/local/share/java state=directory

- name: Install plantuml
  tags: [plantuml]
  get_url:
    url: https://iweb.dl.sourceforge.net/project/plantuml/{{ plantuml.version }}/plantuml.{{ plantuml.version }}.jar
    dest: /usr/local/share/java/plantuml.jar
    owner: root
    group: root
    mode: 0644
    force: true

- name: Install entrypoint
  tags: [plantuml]
  copy:
    src: plantuml
    dest: /usr/local/bin/
    owner: root
    group: root
    mode: 0755
# }}}
