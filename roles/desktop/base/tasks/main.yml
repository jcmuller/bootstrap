# vim: set foldmethod=marker nospell:
---
- name: configure console and control key # {{{
  copy:
    src: "{{item}}"
    dest: /etc/default/
    owner: root
    group: root
    mode: 0644
  with_items:
    - console-setup
    - keyboard
# }}}
- name: Install packages # {{{
  tags: [packages, core]
  apt:
    name: "{{packages}}"
    state: latest
    update_cache: true
# }}}
- name: Install ruby build dependencies # {{{
  tags: [ruby, packages]
  apt:
    name:
      - libgmp-dev
      - libreadline-dev
      - libsqlite3-dev
      - zlib1g-dev
    state: latest
# }}}
- name: Install desktop packages # {{{
  tags: [packages, desktop]
  apt:
    name:
      - arandr
      - copyq
      - gimp
      - firefox
      - i3
      - i3lock-fancy
      - maim
      - qutebrowser # This is to get the prereqs
      - xfonts-terminus
    state: latest
# }}}
- name: Add powerline symbols to terminus font # {{{
  tags: [packages, powerline]
  copy:
    src: 11-powerline-symbols-terminus.conf
    dest: /etc/fonts/conf.d/
    owner: root
    group: root
    mode: 0644
# }}}
- name: Install slack client # {{{
  tags: [packages, desktop, slack]
  apt:
    deb: "https://downloads.slack-edge.com/linux_releases/slack-desktop-{{ slack.version }}-amd64.deb"
    state: present
# }}}
- name: Install zoom client # {{{
  tags: [packages, desktop, zoom]
  apt:
    deb: https://zoom.us/client/latest/zoom_amd64.deb
    state: present
# }}}
# Install spotify {{{
- name: Add apt keys for spotify
  tags: [packages, spotify]
  apt_key:
    url: https://download.spotify.com/debian/pubkey.gpg
- name: Add apt repository for spotify
  tags: [packages, spotify]
  apt_repository:
    repo: deb http://repository.spotify.com stable non-free
    state: present
    update_cache: yes
- name: Install spotify
  tags: [packages, spotify]
  apt:
    pkg: spotify-client
    state: present
# }}}
# Install docker # {{{
- name: Add apt keys for docker
  tags: [packages, docker]
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
- name: Add apt repository for docker
  tags: [packages, docker]
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ docker_engine.ubuntu_release }} stable"
    state: present
    update_cache: yes
- name: Install docker
  tags: [packages, docker]
  apt:
    pkg: docker-ce
    state: present
# }}}
- name: Install docker-compose # {{{
  tags: [packages, docker, docker-compose]
  get_url:
    url: "https://github.com/docker/compose/releases/download/{{ docker_compose.version }}/docker-compose-Linux-x86_64"
    dest: /usr/local/bin/docker-compose
    owner: root
    group: root
    mode: 0755
# }}}
- name: Install docker-machine # {{{
  tags: [packages, docker, docker-machine]
  get_url:
    url: "https://github.com/docker/machine/releases/download/v{{ docker_machine.version }}/docker-machine-Linux-x86_64"
    dest: /usr/local/bin/docker-machine
    owner: root
    group: root
    mode: 0755
# }}}
- name: Add apt keys for gcloud # {{{
  tags: [packages, gcloud]
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
# }}}
- name: Add apt repository for gcloud # {{{
  tags: [packages, gcloud]
  apt_repository:
    repo: deb http://packages.cloud.google.com/apt cloud-sdk-{{ ubuntu.release }} main
    state: present
    update_cache: true
# }}}
- name: Install gcloud # {{{
  tags: [packages, gcloud]
  apt:
    pkg: google-cloud-sdk
    state: present
# }}}
- name: Add sudoers files # {{{
  tags: [sudoers]
  copy:
    src: sudoers.d/
    dest: /etc/sudoers.d/
    owner: root
    group: root
    mode: 0440
    validate: "visudo -cf %s"
# }}}
- name: Modify nsswitch.conf # {{{
  tags: [nsswitch]
  copy:
    src: nsswitch.conf
    dest: /etc/
    owner: root
    group: root
    mode: 0644
    backup: yes
# }}}
- name: Install Slackcat # {{{
  tags: [slackcat]
  get_url:
    url: "https://github.com/bcicen/slackcat/releases/download/v{{ slackcat.version }}/slackcat-{{ slackcat.version }}-linux-amd64"
    dest: /usr/local/bin/slackcat
    owner: root
    group: root
    mode: 0755
# }}}
- name: Install base16-tomorrow-night # {{{
  tags: [base16-tomorrow-night, zsh]
  get_url:
    url: https://raw.githubusercontent.com/chriskempson/base16-shell/master/scripts/base16-tomorrow-night.sh
    dest: /usr/local/bin
    owner: root
    group: root
    mode: 0755
# }}}
- name: Install base16-tomorrow # {{{
  tags: [base16-tomorrow, zsh]
  get_url:
    url: https://raw.githubusercontent.com/chriskempson/base16-shell/master/scripts/base16-tomorrow.sh
    dest: /usr/local/bin
    owner: root
    group: root
    mode: 0755
# }}}
- name: Install ngrok # {{{
  tags: [ngrok]
  unarchive:
    src: https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
    dest: /usr/local/bin
    remote_src: true
# }}}
- name: Install nextcloud # {{{
  tags: [nextcloud]
  get_url:
    url: https://download.nextcloud.com/desktop/releases/Linux/Nextcloud-{{nextcloud.version}}-x86_64.AppImage
    dest: /usr/local/bin/nextcloud
    owner: root
    group: root
    mode: 0755
# }}}
- name: Install kvm # {{{
  tags: [kvm]
  apt:
    state: present
    update_cache: true
    name:
      - bridge-utils
      - libvirt-clients
      - libvirt-daemon-system
      - qemu-kvm
      - virt-manager
# }}}
- name: Install kvm - add user to group # {{{
  tags: [kvm]
  user:
    name: "{{ user.name }}"
    groups:
      - kvm
      - libvirt
      - libvirt-qemu
      - libvirt-dnsmasq
# }}}
- name: Install jq # {{{
  tags: jq
  get_url:
    url: https://github.com/stedolan/jq/releases/download/jq-{{ jq.version }}/jq-linux64
    dest: /usr/local/bin/jq
    owner: root
    group: root
    mode: 0755
    force: true
# }}}
- name: Install yq # {{{
  tags: yq
  get_url:
    url: https://github.com/mikefarah/yq/releases/download/{{ yq.version }}/yq_linux_amd64
    dest: /usr/local/bin/yq
    owner: root
    group: root
    mode: 0755
    force: true
# }}}
- name: Install yj # {{{
  tags: yj
  get_url:
    url: https://github.com/sclevine/yj/releases/download/{{ yj.version }}/yj-linux
    dest: /usr/local/bin/yj
    owner: root
    group: root
    mode: 0755
    force: true
# }}}
# Install plantuml {{{
- name: Ensure directory exists
  tags: [plantuml]
  file: path=/usr/local/share/java state=directory

- name: Install plantuml
  tags: [plantuml]
  get_url:
    url: https://iweb.dl.sourceforge.net/project/plantuml/{{ plantuml.version }}/plantuml.{{ plantuml.version }}.jar
    dest: /usr/local/share/java/plantuml.jar
    owner: root
    group: root
    mode: 0644
    force: true

- name: Install entrypoint
  tags: [plantuml]
  copy:
    src: plantuml
    dest: /usr/local/bin/
    owner: root
    group: root
    mode: 0755
# }}}
